[{"content":"Windows Domain Windows Domain adalah sebuah jaringan khusus yang berisi users dan computers yang diatur oleh pengelola atau admin dalam suatu organisasi. Organisasi yang dimaksud dapat berupa perusahaan, layanan masyarakat, sekolah atau perguruan tinggi, perbankan dll. Windows Domain berguna untuk mensentralisasikan administrasi dari objek-objek yang dimiliki suatu jaringan komputer Windows dalam sebuah repository bernama Active Directory (AD). Server yang menjalankan service Active Directory disebut dengan Domain Controller (DC).\nKelebihan yang didapatkan dengan menggunakan Windows Domain dan Active Directory adalah:\nIdentity Management yang Tersentralisasi: Seluruh users dalam suatu jaringan dapat dikonfigurasikan dengan mudah menggunakan AD. Memudahkan pengelolaan Security Policies: Kita dapat melakukan konfigurasi security policies secara langsung dari Active Directory dan mengaplikasikannya ke users dan computers dalam suatu jaringan AD. Active Directory Login via RDP Untuk terhubung via RDP dengan user dan computer yang tergabung dalam AD, kita dapat meggunakan (contoh) command xfreerdp /u:THM\\Administrator /p:Password321 /v:10.10.108.177 /cert:ignore. Perlu diperhatikan bahwa /u:THM\\Administrator mengindikasikan bahwa kita ingin terhubung sebagai Administrator pada domain THM sedangkan /p:Password321 adalah user password dan /v:10.10.108.177 merupakan IP dari computer yang tergabung dalam domain yang dituju:\nActive Directory Inti dari Windows Domain adalah Active Directory Domain Service (AD DS). Service ini seperti suatu katalog yang menyimpan semua informasi dari “Objects” yang terdapat pada jaringan AD itu sendiri. Object merupakan entitas yang mewakili resources yang terdapat pada jaringan AD.\nAD Objects Users Users merupakan salah satu objek security principals, yang berarti bahwa mereka dapat melakukan autentikasi pada domain dan dapat diberikan privileges pada resources seperti files atau printers. Security principals adalah objek yang dapat melakukan tindakan-tindakan pada resources dalam suatu jaringan.\nUsers dapat direpresentasikan kedalam dua entitas:\nPeople: Users dapat direpresentasikan sebagai seseorang dalam suatu organisasi yang membutuhkan akses ke jaringan, seperti pegawai atau karyawan suatu kantor. Services: Users juga dapat direpresentasikan sebagai services seperti IIS atau MSSQL. Setiap service membutuhkan sebuah user untuk dapat berjalan, tetapi service users berbeda dengan regular users karena service users hanya memiliki privileges yang dibutuhkan untuk menjalankan suatu service. Machines Setiap komputer yang tergabung dalam domain AD, akan direpresentasikan sebagai machines object. Machines juga dapat dikatakan sebagai “security principals” dan diberikan sebuah akun seperti regular user. Akun ini diberikan hak terbatas dalam domain tersebut.\nMachine accounts itu sendiri merupakan local administrator pada suatu komputer fisik, machine accounts tidak seharusnya dapat diakses oleh orang lain kecuali komputer itu sendiri. Namun, jika kita mengetahui passwordnya maka kita tetap dapat melakukan login.\n💡 NOTE: Password yang dimiliki Machine Accounts akan secara otomatis melakukan rotasi dan biasanya password ini berupa 120 karakter random.\nMengidentifikasi machine account cenderung lebih mudah karena memiliki penamaan yang khusus. Machine account name adalah nama komputer ditambah dengan sebuah dollar sign $. Contohnya, sebuah komputer dengan nama DC01 akan memiliki machine account dengan nama DC01$.\nSecurity Groups Pada Windows kita dapat membuat sebuah user groups yang memiliki akses ke resources yang tersedia, dibandingkan dengan memberikan akses ke user yang dipilih satu persatu. Ini dapat mempermudah pengelolaan karena kita dapat menambahkan suatu user ke suatu grup dan user tersebut akan mendapat privileges yang sama dengan anggota satu grupnya. Security Groups juga termasuk sebagai security principals karena memiliki privileges terhadap resources yang tersedia.\nGroups dapat beranggotakan baik users maupun machines. Jika diperlukan, groups juga dapat beranggotakan group lainnya.\nBeberapa groups dibuat secara default dalam suatu domain yang dapat digunakan untuk memberikan privileges yang spesifik kepada users. Sebagai contoh, berikut beberapa groups penting yang terdapat dalam suatu domain:\nDomain Admins: Memiliki privileges terhadap keseluruhan domain. Secara default, domain admins dapat mengelola seluruh komputer dalam suatu domain, termasuk Domain Controllers. Server Operators: Memiliki privileges untuk mengelola Domain Controllers. Mereka tidak dapat mengubah pengelolaan group membership apapun. Backup Operators: Memiliki privileges untuk mengelola file apapun dengan mengabaikan permission-nya. Mereka ditugaskan untuk melakukan backup data pada computers. Account Operators: Memiliki privileges untuk membuat dan memodifikasi akun lainnya dalam domain. Domain Users: Seluruh user accounts dalam domain. Domain Computers: Seluruh computers dalam domain. Domain Controllers: Seluruh Domain Controller dalam domain. Active Directory security groups\nActive Directory Users and Computers Untuk mengelola users, groups maupun machines dalam AD, kita dapat login ke Domain Controller dan menjalankan Active Directory Users and Computers dari start menu:\nIni akan membuka sebuah window di mana kita dapat melihat hierarki dari users, computers dan groups yang terdapat dalam domain. Biasanya object tergabung dalam Organizational Units (OUs) yang merupakan sebuah container untuk mengelompokkan users dan machines. OU biasanya digunakan untuk mendefinisikan sejumlah users dengan policy yang sama. Adapun policy adalah suatu konfigurasi yang dapat diaplikasikan pada objects. Contohnya adalah terdapat policy yang digunakan untuk mengatur jumlah karakter minimum password users. OU mempermudah policy untuk dapat diaplikasikan ke kelompok yang spesifik, seperti pegawai Sales department mungkin diberikan policy yang berbeda dengan pegawai IT department.\n💡 NOTE: Sebuah user hanya dapat menjadi bagian dari satu buah OU pada satu waktu karena mengaplikasikan 2 atau lebih sekumpulan policies ke suatu user dapat berpotensi mengakibatkan tumpang tindih policies, namun satu atau lebih OU dapat menjadi anggota dari OU lainnya (parent and child OUs).\nPada contoh berikut, terdapat suatu OU bernama THM yang memiliki 5 child OUs yaitu IT, Management, Marketing, Research and Development dan Sales. OU biasanya direpresentasikan sesuai dengan struktur bisnis karena biasanya dibutuhkan policies yang berbeda untuk tiap department:\nDefault Containers Terdapat beberapa builtin containers yang dimiliki oleh suatu Domain, beberapa di antaranya adalah:\nBuiltin: Berisi default groups yang tersedia untuk Windows host apapun. Computers: Machine apapun yang tergabung dalam domain. Domain Controllers: OU default yang berisi Domain Controllers yang tergabung dalam domain. Users: Users default dan groups yang tergabung dalam domain. ForeignSecurityPrincipals: Security principals, yang dibuat ketika object (users, computers, atau groups) ditambahkan ke beberapa domain group, tetapi berasal dari trusted external domains. Managed Service Accounts: Service accounts yang tergabung dalam domain. OU Members Jika kita memilih suatu OU, maka akan muncul list nama dan tipe dari member yang dimiliki OU tersebut, seperti contohnya OU IT memiliki 3 users dengan nama Claire, Mary dan Phillip:\nAdd OU Untuk menambahkan OU, right-click parent object, pilih New lalu pilih Organizational Unit:\nKemudian masukkan nama OU yang ingin dibuat lalu pilih OK:\nDelete OU Untuk menghapus OU, pertama kita harus meng-enable Advanced Features:\nLalu memilih OU yang akan dihapus, right-click dan pilih Properties:\nSelanjutnya matikan opsi Protect object from accidental deletion:\nLalu pilih Apply:\nSetelah itu right-click OU yang ingin dihapus, kemudian pilih Delete:\nTerakhir, pilih Yes:\nSecurity Groups vs OUs OUs biasa digunakan untuk mengaplikasikan policies dan konfigurasi spesifik ke users dan computers sesuai pada role mereka masing-masing. Satu user hanya dapat tergabung ke dalam satu OU karena tidak masuk akal untuk mengaplikasikan 2 atau lebih policies sets ke suatu user (berpotensi tumpang tindih). Security Groups biasa digunakan untuk memberikan permission terhadap resources. Contohnya, kita dapat menggunakan groups untuk mengizinkan beberapa users untuk dapat mengakses shared folder pada network printer. Sebuah user dapat tergabung dalam beberapa groups, yang mungkin membutuhkan akses ke beberapa resources. AD Management AD Users Add User Berikut contoh untuk menambahkan user pada OU Sales. Right-click pada OU yang diinginkan, lalu pilih New dan pilih User:\nSetelah itu isi user detail lalu pilih Next:\nLalu masukkan password dan confirm password, kemudian pilih Next:\nJika dirasa sudah sesuai, pilih tombol Finish:\nKemudian cek bahwa user baru telah berhasil ditambahkan ke OU:\nDelete User Right-click pada user yang ingin dihapus, lalu pilih Delete:\nKemudian pilih Yes untuk menghapus user:\nDelegation Delegation adalah sebuah proses untuk memberikan specific privileges ke user(s) untuk dapat melakukan advanced tasks terhadap OUs tanpa membutuhkan campur tangan Domain Administrator.\nContohnya memberikan privileges kepada OU IT Support untuk dapat melakukan password reset ke low-privileged users atau OU lainnya.\nPada contoh berikut, Phillip yang tergabung dalam OU IT akan didelegasikan kontrol untuk melakukan password reset terhadap OU Sales:\nRight-click pada OU yang dituju yaitu OU Sales, lalu pilih Delegate Control:\nLalu pilih Next:\nPilih Add:\nPada Enter the object names to select, ketikkan nama Phillip lalu pilih Check Names agar nama yang kita masukkan merupakan nama yang valid:\nHal ini juga akan melakukan auto complete pada nama yang dimasukkan. Jika sudah sesuai, pilih OK:\nPilih Next:\nLalu pilih kontrol yang akan di delegasikan ke Phillip, yaitu kontrol Reset user passwords and force password change at next logon, lalu pilih Next:\nTerakhir, cek seluruh settings dan pilih Finish:\nUntuk memeriksa apakah kontrol sudah didelegasikan kita akan login RDP sebagai Phillip dengan command xfreerdp /u:THM\\phillip /p:Claire2008 /v:10.10.108.177 /cert:ignore:\nLogged in sebagai phillip:\nKarena Phillip tidak dapat membuka Active Directory Users and Computers, maka kita harus menggunakan PowerShell:\nUntuk set reset password, pertama kita harus mengganti passwotf Sophie dengan password sembarang, contohnya P@ssw0rd dengan command Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt 'New Password') -Verbose lalu masukkan P@ssw0rd pada prompt:\nSelanjutnya set agar Sophie harus mengganti passwordnya saat login dengan command Set-ADUser -ChangePasswordAtLogon $true -Identity sophie -Verbose:\nSetelah selesai coba login sebagai Sophie dengan menggunakan password P@ssw0rd dengan command xfreerdp /u:THM\\sophie /p:P@ssw0rd /v:10.10.108.177 /cert:ignore:\nSetelah memasukkan password, akan muncul tampilan untuk mengubah password, pilih OK:\nSelanjutnya, sebagai Sophie masukkan password baru:\nJike berhasil, maka akan muncul notifikasi seperti berikut, lalu pilih OK:\nLogged in sebagai Sophie:\nAD Computers Secara default, semua computers (kecuali Domain Controller) akan dikelompokkan dalam container bernama Computers. Biasanya terdapat beberapa computers seperti Laptop, PC dan Server:\nNamun, biasanya merupakan best practice untuk memilah computers dan mengelopokkannya ke dalam beberapa OU. Berikut beberapa OU yang dapat membantu kita untuk mengelompokkan computers:\nWorkstations sesuai namanya yang berarti stasiun kerja, merupakan device yang dapat digunakan untuk pekerjaan sehari-hari dan aktivitas browsing normal. Device ini semestinya tidak boleh digunakan oleh privileged user untuk sign in dan melakukan aktivitas apapun di sesi aktifnya. Workstations sangat sering dijumpai di AD. Servers merupakan server, komputer yang digunakan untuk menyediakan services ke users ataupun ke server lainnya. Merupakan komputer tersering kedua yang dapat dijumpai di AD. Domain Controllers merupakan komputer yang digunakan untuk me-manage domain AD. DC merupakan komputer paling vital di AD, hal ini karena DC memuat hashed passwords dari seluruh akun di dalam suatu domain AD. DC merupakan komputer tersering ketiga yang dapat dijumpai di AD. Group Computers Computers tentunya dapat dimuat ke dalam beberapa groups dengan OU, pertama buat OU:\nMembuat OU untuk Workstations:\nMembuat OU untuk Servers:\nPastikan kedua OU tersebut berhasil dibuat:\nUntuk memindahkan computers dapat dilakukan dengan drag-n-drop, selanjutnya pindahkan laptop dan PC ke OU Workstations dan pindahkan server ke OU Servers dan pilih Yes:\nBerikut members dari OU Workstations:\nBerikut members dari OU Servers:\nGroup Policy Object (GPO) Group Policy Object atau GPO adalah sejumlah pengaturan yang dapat diaplikasikan untuk OUs. GPO dapat memuat policies baik untuk users maupun computers. GPO didistribusikan via network share bernama SYSVOL, yang disimpan pada DC. Semua users dalam domain harusnya memiliki akses ke share ini untuk melakukan sinkronisasi GPOs seiring berjalannya waktu. SYSVOL share berada pada C:\\Windows\\SYSVOL\\sysvol\\ dari setiap DC yang berada pada network AD.\nDiperlukan waktu sampai 2 jam bagi computers untuk melakukan sinkronisasi terhadap pembaruan GPOs. Namun jika sinkronisasi dibutuhkan saat itu juka, users dapat menjalankan perintah berikut pada PowerShell gpupdate /force.\nGroup Policy Management Merupakan software yang digunakan untuk melakukan konfigurasi Group Policy, untuk membuka Group Policy Management dapat dilihat dari start menu:\nGroup Policy Management akan menampilkan hierarki OU dalam AD, GPOs yang tersedia dan GPOs yang sudah diaplikasikan untuk tiap OU yang dipilih. Berikut kita dapat melihat 3 GPO yang sudah dibuat. Dari ketiganya, GPO Default Domain Policy dan GPO RDP Policy sudah diaplikasikan secara keseluruhan ke domain thm.local dan GPO Default Domain Controllers Policy sudah diaplikasikan ke OU Dmain Controllers.\n💡 NOTE: GPO akan diaplikasikan ke OUs dan sub-OUs. Contohnya OU Sales akan tetap terpengaruh GPO Default Domain Policy karena OU Sales berada di bawah OU THM yang berada di bawah thm.local.\nUntuk menganalisa GPO lebih lanjut, kita dapat memilih GPO yang ingin di analisa. Contoh, pada tab Scope kita dapat mengetahui bahwa GPO Default Domain Policy diaplikasikan pada thm.local. Kita juga dapat mengaplikasikan Security Filtering untuk GPOs sehingga GPOs tersebut hanya diaplikasikan untuk specific users/computers di dalam sebuah OU. Secara default GPO akan diaplikasikan untuk Authenticated Users yang mencakup seluruh users/PCs:\nTab Settings dapat memperlihatkan detail terkait suatu GPO.\n💡 NOTE: Setiap GPO memiliki konfigurasi yang dapat diaplikasikan untuk computers dan konfigurasi yang dapat diaplikasikan untuk users.\nBerikut tampilan dari tab Settings yang dimiliki GPO Default Domain Policy, dapat dilihat bahwasannya GPO ini hanya mengaplikasikan computers configurations dan tidak mengaplikasikan users configurations (untuk mendapatkan detail yang lebih jelas, pilih tombol show):\nCreate User Configurations GPO Untuk mengkonfigurasikan sebuah GPO, terlebih dahulu kita harus membuat GPO dalam Group Policy Objects lalu menerapkan GPO tersebut ke OU yang diinginkan. Pada contoh berikut, kita akan membuat sebuah GPO bernama Restrict Control Panel Access. GPO ini akan memblokir users agar tidak dapat membuka Control Panel. GPO akan diterapkan untuk OU Marketing, Management dan Sales. Berikut langkah-langkah yang harus dilakukan:\nRight-click pada Group Policy Object lalu pilih New:\nBeri nama GPO sesuai dengan apa yang dilakukannya, lalu pilih OK:\nKemudian right-click pada GPO yang baru dibuat dan pilih Edit:\nLalu Group Policy Management Editor akan terbuka, navigasi ke User Configuration → Policies → Administrative Template → Control Panel lalu right-click pada Prohibit access to Control Panel and PC settings kemudian pilih Edit:\nPilih Enabled lalu pilih Apply:\nCek kembali GPO yang telah dimodifikasi pastikan bahwa State menunjukkan Enabled:\nSelanjutnya drag-n-drop GPO ke OU yang dituju, yaitu OU Marketing, Management dan Sales:\nPastikan kembali bahwa GPO yang dipilih sudah diaplikasikan ke OU yang sesuai:\nUntuk membuktikan ini, kita dapat masuk ke akun Mark yang merupakan member dari OU Marketing melalui RDP dengan command xfreerdp /u:THM\\Mark /p:M4rk3t1ng.21 /v:10.10.72.164 /cert:ignore:\nSetelah berhasil login, buka PowerShell lalu sinkronisasi akun Mark dengan GPO yang diperbarui dengan command gpupdate /force:\nSelanjutnya buka Control Panel:\nDan akses Control Panel yang dimiliki Mark akan diblok oleh GPO:\nCreate Computer Configurations GPO Pada contoh berikut, kita akan membuat GPO yang akan melakukan lock screen jika tidak ada aktivitas dalam 5 menit terakhir. GPO ini akan diberi nama Auto Lock Screen. GPO ini akan diaplikasikan untuk OU Workstations, Servers dan Domain Controllers. Namun, karena ketiga OU yang dituju adalah child dari root domain thm.local maka GPO akan diaplikasikan ke root domain. GPO ini nantinya akan mempengaruhi OUs dan sub-OUs dibawah root domain.\nGPO ini tidak akan mempengaruhi OU seperti Sales atau Marketing karena OU tersebut hanya memiliki anggota berupa users bukan berupa computers sehingga OU akan mengabaikan GPO ini. Berikut langkah-langkah yang dilakukan untuk membuat GPO ini:\nRight-click pada Group Policy Objects lalu pilih New:\nMasukkan nama GPO yang sesuai lalu pilih OK:\nRight-click pada GPO yang baru dibuat dan pilih Edit:\nLalu navigasi ke Computer Configuration → Policies → Windows Settings → Security Settings → Local Policies → Security Options lalu right-click pada Interactive logon: Machine inactivity limit dan pilih Properties:\nPilih Define this policy setting lalu masukkan 300 detik (custom) sehingga computer yang tidak aktif dalam 5 menit akan di-lock, kemudian pilih Apply:\nBerikutnya, cek kembali GPO yang sudah dikonfigurasi:\nAplikasikan GPO ke root domain thm.local dengan melakukan drag-n-drop GPO ke root domain, lalu pilih OK:\nTerkhir, cek kembali GPO yang sudah diaplikasikan:\nLakukan gpupdate untuk melakukan sinkronisasi GPO dengan memasukkan command gpupdate /force pada PowerShell:\nEdit GPO GPO \u0026ldquo;Default Domain Policy\u0026rdquo; merupakan konfigurasi standar yang seharusnya diaplikasikan di sebagian besar domains, di dalamnya terdapat policy yang mengatur tentang password dan account lockout:\nKarena GPO ini diaplikasikan ke keseluruhan domain, maka tiap perubahan pada GPO tersbut akan berpengaruh terhadap seluruh computers. Pada contoh berikut, kita akan mencoba untuk mengubah Minimum password length menjadi 10 characters.\nPertama, right-click pada GPO yang ingin diubah lalu pilih Edit:\nHal ini akan membuka suatu window baru bernama Group Policy Management Editor. Selanjutnya pilih Computer Configurations → Policies → Windows Setting → Security Settings → Account Policies → Password Policy lalu right-click pada Minimum password length dan pilih Properties:\nLalu masukkan panjang password yang sesuai, lalu pilih Apply:\nPilih OK:\nCek kembali policy yang telah diubah:\nUntuk memeriksa policy lebih detail, kita bisa melihat keterangan policy pada tab Explain:\nReferences TryHackMe | Active Directory Basics\n","date":"2023-01-02T00:00:00Z","permalink":"https://operacastor.github.io/p/active-directory/","title":"Active Directory"},{"content":"Hello, Universe. Yup, ini adalah post pertama yang saya buat di blog ini. Pada post kali ini, saya akan menjelaskan bagaimana saya membuat blog ini. Saya juga akan menyertakan referensi dan sumber terkait yang berhubungan dengan pembuatan blog ini. Semoga dapat menjadi referensi teman-teman yang mungkin berniat untuk mem-publish GitHub Pages. Dimohon kepada teman-teman yang membaca ini untuk dapat membaca post ini dari awal sampai akhir tanpa skip dan sangat dianjurkan untuk membuka link atau referensi yang saya cantumkan di post ini.\nPrerequisities Machine Specification Kita mulai dengan machine specification. Blog ini dibuat di laptop pribadi saya. Melihat output dari About This Mac, berikut spesifikasi laptop yang saya gunakan saat menulis post ini:\nmacOS Monterey MacBook Pro (14-inch, 2021) Chip Apple M1 Pro Memory 16 GB Lebih detilnya, blog ini juga dibuat pada virtualized environment sebagai berikut:\nVirtualization Software: UTM OS: Kali Linux ARM64 Karena saya menggunakan Linux, maka mungkin langkah-langkah yang akan saya jelaskan disini cenderung lebih relate dengan environment Linux dan MacOS. Tapi saya yakin sebagian besar dari langkah-langkah yang dituliskan disini juga dapat dijadikan sebagai acuan untuk teman-teman yang menggunakan Windows.\nGitHub Pages GitHub Pages menurut saya merupakan sebuah service dari GitHub yang memungkinkan user untuk meng-hosting project yang dimilikinya. Blog ini pun dibuat dengan GitHub Pages. Selengkapnya tentang GitHub Pages bisa teman-teman lihat di webpage GitHub Pages:\nGitHub Pages\nHugo Selanjutnya adalah Hugo. Hugo merupakan static site generator yang saya pakai untuk membuat blog ini. Static site generator ini biasanya digunakan untuk membuat static site seperti blog, website untuk documentation, digital portfolio, dll. Terdapat berbagai macam static site generator selain Hugo, salah satu yang terkenal adalah Jekyll. Berikut beberapa referensi (YouTube Playlists) yang saya tonton untuk mempelajari Hugo dan Jekyll:\nIntroduction to Hugo | Hugo - Static Site Generator | Tutorial 1\nIntroduction | Jekyll - Static Site Generator | Tutorial 1\nPada post ini, saya hanya akan menjelaskan tentang Hugo. Untuk Jekyll teman-teman bisa coba untuk explore dan experiment sendiri.\nReferences Berikut beberapa referensi yang membantu saya dalam membuat blog ini:\nLinux Fundamentals via https://linuxjourney.com/ Git via https://git-scm.com/ Akun GitHub via https://github.com Fundamental Git dan GitHub via https://youtu.be/lTMZxWMjXQU?list=PLFIM0718LjIVknj6sgsSceMqlq242-jNf (YouTube Playlist) Text Editor (Visual Studio Code) via https://code.visualstudio.com/ Golang via https://go.dev/ Hugo (Extended) via https://gohugo.io/ Hugo Themes via https://github.com/CaiJimmy/hugo-theme-stack Hugo and GitHub Pages Tutorial via https://youtu.be/LIFvgrRxdt4 Setup Environment Git Set konfigurasi username Git (disarankan untuk disamankan dengan username GitHub) dengan command git config --global user.name \u0026quot;\u0026lt;username-github\u0026gt;\u0026quot;. Set konfigurasi email Git (disarankan untuk disamakan dengan email yang digunakan untuk akun GitHub) dengan command git config --global user.email \u0026quot;\u0026lt;email@email\u0026gt;.com\u0026quot;. Instalasi Hugo Pertama, clone repository Hugo dengan command cd ~ \u0026amp;\u0026amp; git clone https://github.com/gohugoio/hugo.git. Setelah itu pindah ke repository Hugo yang sudah di-clone pada local dengan command cd hugo. Terakhir install Hugo Extended dengan command go install --tags extended. Membuat Blog dengan Hugo dan GitHub Pages Membuat Repository GitHub Pertama, buat sebuah repository kosong pada GitHub. Repository ini akan digunakan untuk menampung environment dev dari blog yang sudah dibuat. Teman-teman disarankan untuk memberikan nama yang sekiranya sesuai untuk repository ini, contohnya \u0026ldquo;blog\u0026rdquo;. Kedua, buatlah repository dengan format nama “\u0026lt;username-github\u0026gt;.github.io”. Repository ini nantinya akan menampung environment prod dari blog yang sudah jadi. Merancang Blog pada Environment Dev Membuat site baru dengan command hugo new site blog -f yml. Flag -f digunakan untuk membuat file config dengan ekstensi .yml karena pada pengaturan default, file config dibuat dengan ekstensi .toml. Dengan menjalankan command tersebut, Hugo akan membuat sebuah blog beserta templates-nya pada directory dengan nama yang sama yaitu directory blog.\nPindah ke directory yang telah di-generate dengan command cd blog.\nInisialisasikan repository Git pada directory blog dengan command git init.\nMenambahkan tema Stack pada directory blog dengan command git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack.\nSelanjutnya teman-teman dapat melakukan kustomisasi terhadap tampilan blog sesuka hati teman-teman. Terdapat beberapa template yang sudah dibuatkan oleh creator pada directory ~/blog/themes/hugo-theme-stack/exampleSite yang berisikan beberapa file dan directory lainnya seperti pada gambar berikut:\nBeberapa modifikasi yang dapat dilakukan adalah:\nMeng-copy isi dari ~/blog/themes/hugo-theme-stack/exampleSite/content/ ke ~/blog/content/ dengan command cp ~/blog/themes/hugo-theme-stack/exampleSite/content/* ~/blog/content.\nKemudian meng-copy file ~/blog/themes/hugo-theme-stack/exampleSite/.gitignore ke ~/blog/.gitignore dengan command cp ~/blog/themes/hugo-theme-stack/exampleSite/.gitignore ~/blog/.gitignore.\nLalu meng-copy file ~/blog/themes/hugo-theme-stack/exampleSite/config.yaml ke ~/blog/config.yml dengan command cp ~/blog/themes/hugo-theme-stack/exampleSite/config.yaml ~/blog/config.yml.\nMelakukan kustomisasi pada file ~/blog/config.yml, saya sendiri mengubah isi file tersebut menjadi seperti berikut:\nbaseurl: https://\u0026lt;username-github\u0026gt;.github.io/ # Diisi dengan GitHUb Pages https://\u0026lt;username-github\u0026gt;.github.io languageCode: id-id # Diisi dengan language code, jika berbahasa asing maka dapat disesuaikan, contohnya menjadi \u0026#34;en-us\u0026#34; untuk American English theme: hugo-theme-stack paginate: 5 title: \u0026lt;username-github\u0026gt; Blog # Diisi dengan nama blog yang diinginkan languages: id: languageName: Bahasa Indonesia title: \u0026lt;username-github\u0026gt; Blog description: Selamat Datang di Blog Saya weight: 1 en: languageName: English title: \u0026lt;username-github\u0026gt; Blog description: Welcome to My Blog weight: 2 # Change it to your Disqus shortname before using disqusShortname: hugo-theme-stack # GA Tracking ID googleAnalytics: # Theme i18n support # Available values: ar, bn, ca, de, el, en, es, fr, hu, id, it, ja, ko, nl, pt-br, th, uk, zh-cn, zh-hk, zh-tw DefaultContentLanguage: id # Set hasCJKLanguage to true if DefaultContentLanguage is in [zh-cn ja ko] # This will make .Summary and .WordCount behave correctly for CJK languages. hasCJKLanguage: false permalinks: post: /p/:slug/ page: /:slug/ params: mainSections: - post featuredImageField: image rssFullContent: true favicon: /img/favicon.ico footer: since: 2022 customText: dateFormat: published: Jan 02, 2006 lastUpdated: Jan 02, 2006 15:04 MST sidebar: emoji: subtitle: Welcome to my INFOSEC blog avatar: enabled: false local: true src: img/avatar.png article: math: false toc: true readingTime: true license: enabled: true default: Licensed under CC BY-NC-SA 4.0 comments: enabled: false provider: disqus disqusjs: shortname: apiUrl: apiKey: admin: adminLabel: utterances: repo: issueTerm: pathname label: remark42: host: site: locale: vssue: platform: owner: repo: clientId: clientSecret: autoCreateIssue: false # Waline client configuration see: https://waline.js.org/en/reference/component.html waline: serverURL: lang: pageview: emoji: - https://unpkg.com/@waline/emojis@1.0.1/weibo requiredMeta: - name - email - url locale: admin: Admin placeholder: twikoo: envId: region: path: lang: # See https://cactus.chat/docs/reference/web-client/#configuration for description of the various options cactus: defaultHomeserverUrl: \u0026#34;https://matrix.cactus.chat:8448\u0026#34; serverName: \u0026#34;cactus.chat\u0026#34; siteName: \u0026#34;\u0026#34; # You must insert a unique identifier here matching the one you registered (See https://cactus.chat/docs/getting-started/quick-start/#register-your-site) giscus: repo: repoID: category: categoryID: mapping: lightTheme: darkTheme: reactionsEnabled: 1 emitMetadata: 0 gitalk: owner: admin: repo: clientID: clientSecret: cusdis: host: id: widgets: homepage: - type: search - type: archives params: limit: 5 - type: categories params: limit: 10 - type: tag-cloud params: limit: 10 page: - type: toc opengraph: twitter: # Your Twitter username site: # Available values: summary, summary_large_image card: summary_large_image defaultImage: opengraph: enabled: false local: false src: colorScheme: # Display toggle toggle: true # Available values: auto, light, dark default: auto imageProcessing: cover: enabled: true content: enabled: true ### Custom menu ### See https://docs.stack.jimmycai.com/configuration/custom-menu.html ### To remove about, archive and search page menu item, remove `menu` field from their FrontMatter menu: main: [] social: - identifier: github name: GitHub url: https://github.com/\u0026lt;username-github\u0026gt; params: icon: brand-github - identifier: twitter name: Twitter url: https://twitter.com/\u0026lt;username-twitter\u0026gt; params: icon: brand-twitter related: includeNewer: true threshold: 60 toLower: false indices: - name: tags weight: 100 - name: categories weight: 200 markup: goldmark: renderer: ## Set to true if you have HTML content inside Markdown unsafe: false tableOfContents: endLevel: 4 ordered: false startLevel: 2 highlight: noClasses: false codeFences: true guessSyntax: true lineNoStart: 1 lineNos: true lineNumbersInTable: true tabWidth: 4 Setelah melakukan semua langkah di atas, teman-teman dapat melihat tampilan blog dengan menggunakan command cd ~/blog \u0026amp;\u0026amp; hugo server lalu buka http://localhost:1313/ pada browser. Step ini akan memperlihatkan tampilan sementara dari web atau blog yang akan di-publish. Sebagai tambahan, teman-teman juga dapat menambahkan post, meng-custom halaman about, membuat kategori, dll. Jika terdapat error, maka teman-teman dapat melihatnya di terminal saat menjalankan command hugo server.\nSetelah itu lakukan commit dengan command cd ~/blog \u0026amp;\u0026amp; git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;Initial Commit\u0026quot;.\nPush Environment Dev ke Repository GitHub Buka terminal pada local, lalu pindah ke directory environment dev blog dengan command cd ~/blog. Tambahkan remote repository ke directory environment dev dengan command git remote add origin https://github.com/\u0026lt;username-github\u0026gt;/blog.git \u0026amp;\u0026amp; git branch -M main \u0026amp;\u0026amp; git push -u origin main. Pastikan bahwa environment dev telah berhasil di-push ke GitHub. Merancang Blog pada Environment Prod Selanjutnya lakukan clone repository GitHub Pages ke local dengan command cd ~ \u0026amp;\u0026amp; git clone https://github.com/\u0026lt;username-github\u0026gt;/\u0026lt;username-github\u0026gt;.github.io.git. Lalu pindah ke repository yang telah di-clone dengan command cd \u0026lt;username-github\u0026gt;.github.io. Pindah ke branch main dengan command git checkout -b main. Buat sebuah file README.md. Lakukan commit dengan command git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;Initial Commit\u0026quot;. Push ke GitHub dengan command git push origin main. Beralih ke directory environment dev dengan command cd ~/blog. Buat sebuah directory bernama production dengan command mkdir production. Menyambungkan repository environment dev ke directory *production dengan command git submodule add -b main https://github.com/\u0026lt;username-github\u0026gt;/\u0026lt;username-github\u0026gt;.github.io.git production. Meng-generate versi final dari blog pada environment dev ke directory production dengan command hugo -D -d production. Lalu membuat sebuah file kosong dengan nama .nojekyll pada directory production dengan command touch ./production/.nojekyll. Lakukan commit sekali lagi dengan command git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;Production Commit\u0026quot;. Push Environment Prod ke Repository Github Pindah ke directory production yang telah dibuat dengan command cd ~/blog/production. Lalu push ke remote repository dengan command git push origin main. Memperbarui Blog Untuk meng-update blog dapat dilakukan dengan menambahkan perubahan pada environment dev atau pada kali ini yaitu dalam directory ~/blog/. Hasil pembaruan dapat dilihat dengan menggunakan command hugo server. Setelah itu save seluruh file yang telah di-update, lalu generate hasil update ke directory production dengan command cd ~/blog \u0026amp;\u0026amp; hugo -D -d production, melakukan commit dan push ke remote repository \u0026lt;username-github\u0026gt;.github.io dengan command cd ~/blog/production \u0026amp;\u0026amp; git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;Production Commit\u0026quot; \u0026amp;\u0026amp; git push origin main. ","date":"2022-11-23T00:00:00Z","permalink":"https://operacastor.github.io/p/membuat-blog-dengan-hugo-dan-github-pages/","title":"Membuat Blog dengan Hugo dan GitHub Pages"}]