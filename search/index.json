[{"content":"Hello, Universe. Yup, ini adalah post pertama yang saya buat di blog ini. Pada post kali ini, saya akan menjelaskan bagaimana saya membuat blog ini. Saya juga akan menyertakan referensi dan sumber terkait yang berhubungan dengan pembuatan blog ini. Semoga dapat menjadi referensi teman-teman yang mungkin berniat untuk mem-publish GitHub Pages. Dimohon kepada teman-teman yang membaca ini untuk dapat membaca post ini dari awal sampai akhir tanpa skip dan sangat dianjurkan untuk membuka link atau referensi yang saya cantumkan di post ini.\nPrerequisities Machine Specification Kita mulai dengan machine specification. Blog ini dibuat di laptop pribadi saya. Melihat output dari About This Mac, berikut spesifikasi laptop yang saya gunakan saat menulis post ini:\nmacOS Monterey MacBook Pro (14-inch, 2021) Chip Apple M1 Pro Memory 16 GB Lebih detilnya, blog ini juga dibuat pada virtualized environment sebagai berikut:\nVirtualization Software: UTM OS: Kali Linux ARM64 Karena saya menggunakan Linux, maka mungkin langkah-langkah yang akan saya jelaskan disini cenderung lebih relate dengan environment Linux dan MacOS. Tapi saya yakin sebagian besar dari langkah-langkah yang dituliskan disini juga dapat dijadikan sebagai acuan untuk teman-teman yang menggunakan Windows.\nGitHub Pages GitHub Pages menurut saya merupakan sebuah service dari GitHub yang memungkinkan user untuk meng-hosting project yang dimilikinya. Blog ini pun dibuat dengan GitHub Pages. Selengkapnya tentang GitHub Pages bisa teman-teman lihat di webpage GitHub Pages:\nGitHub Pages\nHugo Selanjutnya adalah Hugo. Hugo merupakan static site generator yang saya pakai untuk membuat blog ini. Static site generator ini biasanya digunakan untuk membuat static site seperti blog, website untuk documentation, digital portfolio, dll. Terdapat berbagai macam static site generator selain Hugo, salah satu yang terkenal adalah Jekyll. Berikut beberapa referensi (YouTube Playlists) yang saya tonton untuk mempelajari Hugo dan Jekyll:\nIntroduction to Hugo | Hugo - Static Site Generator | Tutorial 1\nIntroduction | Jekyll - Static Site Generator | Tutorial 1\nPada post ini, saya hanya akan menjelaskan tentang Hugo. Untuk Jekyll teman-teman bisa coba untuk explore dan experiment sendiri.\nReferences Berikut beberapa referensi yang membantu saya dalam membuat blog ini:\nLinux Fundamentals via https://linuxjourney.com/ Git via https://git-scm.com/ Akun GitHub via https://github.com Fundamental Git dan GitHub via https://youtu.be/lTMZxWMjXQU?list=PLFIM0718LjIVknj6sgsSceMqlq242-jNf (YouTube Playlist) Text Editor (Visual Studio Code) via https://code.visualstudio.com/ Golang via https://go.dev/ Hugo (Extended) via https://gohugo.io/ Hugo Themes via https://github.com/CaiJimmy/hugo-theme-stack Hugo and GitHub Pages Tutorial via https://youtu.be/LIFvgrRxdt4 Setup Environment Git Set konfigurasi username Git (disarankan untuk disamankan dengan username GitHub) dengan command git config --global user.name \u0026quot;\u0026lt;username-github\u0026gt;\u0026quot;. Set konfigurasi email Git (disarankan untuk disamakan dengan email yang digunakan untuk akun GitHub) dengan command git config --global user.email \u0026quot;\u0026lt;email@email\u0026gt;.com\u0026quot;. Instalasi Hugo Pertama, clone repository Hugo dengan command cd ~ \u0026amp;\u0026amp; git clone https://github.com/gohugoio/hugo.git. Setelah itu pindah ke repository Hugo yang sudah di-clone pada local dengan command cd hugo. Terakhir install Hugo Extended dengan command go install --tags extended. Membuat Blog dengan Hugo dan GitHub Pages Membuat Repository GitHub Pertama, buat sebuah repository kosong pada GitHub. Repository ini akan digunakan untuk menampung environment dev dari blog yang sudah dibuat. Teman-teman disarankan untuk memberikan nama yang sekiranya sesuai untuk repository ini, contohnya \u0026ldquo;blog\u0026rdquo;. Kedua, buatlah repository dengan format nama “\u0026lt;username-github\u0026gt;.github.io”. Repository ini nantinya akan menampung environment prod dari blog yang sudah jadi. Merancang Blog pada Environment Dev Membuat site baru dengan command hugo new site blog -f yml. Flag -f digunakan untuk membuat file config dengan ekstensi .yml karena pada pengaturan default, file config dibuat dengan ekstensi .toml. Dengan menjalankan command tersebut, Hugo akan membuat sebuah blog beserta templates-nya pada directory dengan nama yang sama yaitu directory blog.\nPindah ke directory yang telah di-generate dengan command cd blog.\nInisialisasikan repository Git pada directory blog dengan command git init.\nMenambahkan tema Stack pada directory blog dengan command git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack.\nSelanjutnya teman-teman dapat melakukan kustomisasi terhadap tampilan blog sesuka hati teman-teman. Terdapat beberapa template yang sudah dibuatkan oleh creator pada directory ~/blog/themes/hugo-theme-stack/exampleSite yang berisikan beberapa file dan directory lainnya seperti pada gambar berikut:\nBeberapa modifikasi yang dapat dilakukan adalah:\nMeng-copy isi dari ~/blog/themes/hugo-theme-stack/exampleSite/content/ ke ~/blog/content/ dengan command cp ~/blog/themes/hugo-theme-stack/exampleSite/content/* ~/blog/content.\nKemudian meng-copy file ~/blog/themes/hugo-theme-stack/exampleSite/.gitignore ke ~/blog/.gitignore dengan command cp ~/blog/themes/hugo-theme-stack/exampleSite/.gitignore ~/blog/.gitignore.\nLalu meng-copy file ~/blog/themes/hugo-theme-stack/exampleSite/config.yaml ke ~/blog/config.yml dengan command cp ~/blog/themes/hugo-theme-stack/exampleSite/config.yaml ~/blog/config.yml.\nMelakukan kustomisasi pada file ~/blog/config.yml, saya sendiri mengubah isi file tersebut menjadi seperti berikut:\nbaseurl: https://\u0026lt;username-github\u0026gt;.github.io/ # Diisi dengan GitHUb Pages https://\u0026lt;username-github\u0026gt;.github.io languageCode: id-id # Diisi dengan language code, jika berbahasa asing maka dapat disesuaikan, contohnya menjadi \u0026#34;en-us\u0026#34; untuk American English theme: hugo-theme-stack paginate: 5 title: \u0026lt;username-github\u0026gt; Blog # Diisi dengan nama blog yang diinginkan languages: id: languageName: Bahasa Indonesia title: \u0026lt;username-github\u0026gt; Blog description: Selamat Datang di Blog Saya weight: 1 en: languageName: English title: \u0026lt;username-github\u0026gt; Blog description: Welcome to My Blog weight: 2 # Change it to your Disqus shortname before using disqusShortname: hugo-theme-stack # GA Tracking ID googleAnalytics: # Theme i18n support # Available values: ar, bn, ca, de, el, en, es, fr, hu, id, it, ja, ko, nl, pt-br, th, uk, zh-cn, zh-hk, zh-tw DefaultContentLanguage: id # Set hasCJKLanguage to true if DefaultContentLanguage is in [zh-cn ja ko] # This will make .Summary and .WordCount behave correctly for CJK languages. hasCJKLanguage: false permalinks: post: /p/:slug/ page: /:slug/ params: mainSections: - post featuredImageField: image rssFullContent: true favicon: /img/favicon.ico footer: since: 2022 customText: dateFormat: published: Jan 02, 2006 lastUpdated: Jan 02, 2006 15:04 MST sidebar: emoji: subtitle: Welcome to my INFOSEC blog avatar: enabled: false local: true src: img/avatar.png article: math: false toc: true readingTime: true license: enabled: true default: Licensed under CC BY-NC-SA 4.0 comments: enabled: false provider: disqus disqusjs: shortname: apiUrl: apiKey: admin: adminLabel: utterances: repo: issueTerm: pathname label: remark42: host: site: locale: vssue: platform: owner: repo: clientId: clientSecret: autoCreateIssue: false # Waline client configuration see: https://waline.js.org/en/reference/component.html waline: serverURL: lang: pageview: emoji: - https://unpkg.com/@waline/emojis@1.0.1/weibo requiredMeta: - name - email - url locale: admin: Admin placeholder: twikoo: envId: region: path: lang: # See https://cactus.chat/docs/reference/web-client/#configuration for description of the various options cactus: defaultHomeserverUrl: \u0026#34;https://matrix.cactus.chat:8448\u0026#34; serverName: \u0026#34;cactus.chat\u0026#34; siteName: \u0026#34;\u0026#34; # You must insert a unique identifier here matching the one you registered (See https://cactus.chat/docs/getting-started/quick-start/#register-your-site) giscus: repo: repoID: category: categoryID: mapping: lightTheme: darkTheme: reactionsEnabled: 1 emitMetadata: 0 gitalk: owner: admin: repo: clientID: clientSecret: cusdis: host: id: widgets: homepage: - type: search - type: archives params: limit: 5 - type: categories params: limit: 10 - type: tag-cloud params: limit: 10 page: - type: toc opengraph: twitter: # Your Twitter username site: # Available values: summary, summary_large_image card: summary_large_image defaultImage: opengraph: enabled: false local: false src: colorScheme: # Display toggle toggle: true # Available values: auto, light, dark default: auto imageProcessing: cover: enabled: true content: enabled: true ### Custom menu ### See https://docs.stack.jimmycai.com/configuration/custom-menu.html ### To remove about, archive and search page menu item, remove `menu` field from their FrontMatter menu: main: [] social: - identifier: github name: GitHub url: https://github.com/\u0026lt;username-github\u0026gt; params: icon: brand-github - identifier: twitter name: Twitter url: https://twitter.com/\u0026lt;username-twitter\u0026gt; params: icon: brand-twitter related: includeNewer: true threshold: 60 toLower: false indices: - name: tags weight: 100 - name: categories weight: 200 markup: goldmark: renderer: ## Set to true if you have HTML content inside Markdown unsafe: false tableOfContents: endLevel: 4 ordered: false startLevel: 2 highlight: noClasses: false codeFences: true guessSyntax: true lineNoStart: 1 lineNos: true lineNumbersInTable: true tabWidth: 4 Setelah melakukan semua langkah di atas, teman-teman dapat melihat tampilan blog dengan menggunakan command cd ~/blog \u0026amp;\u0026amp; hugo server lalu buka http://localhost:1313/ pada browser. Step ini akan memperlihatkan tampilan sementara dari web atau blog yang akan di-publish. Sebagai tambahan, teman-teman juga dapat menambahkan post, meng-custom halaman about, membuat kategori, dll. Jika terdapat error, maka teman-teman dapat melihatnya di terminal saat menjalankan command hugo server.\nSetelah itu lakukan commit dengan command cd ~/blog \u0026amp;\u0026amp; git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;Initial Commit\u0026quot;.\nPush Environment Dev ke Repository GitHub Buka terminal pada local, lalu pindah ke directory environment dev blog dengan command cd ~/blog. Tambahkan remote repository ke directory environment dev dengan command git remote add origin https://github.com/\u0026lt;username-github\u0026gt;/blog.git \u0026amp;\u0026amp; git branch -M main \u0026amp;\u0026amp; git push -u origin main. Pastikan bahwa environment dev telah berhasil di-push ke GitHub. Merancang Blog pada Environment Prod Selanjutnya lakukan clone repository GitHub Pages ke local dengan command cd ~ \u0026amp;\u0026amp; git clone https://github.com/\u0026lt;username-github\u0026gt;/\u0026lt;username-github\u0026gt;.github.io.git. Lalu pindah ke repository yang telah di-clone dengan command cd \u0026lt;username-github\u0026gt;.github.io. Pindah ke branch main dengan command git checkout -b main. Buat sebuah file README.md. Lakukan commit dengan command git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;Initial Commit\u0026quot;. Push ke GitHub dengan command git push origin main. Beralih ke directory environment dev dengan command cd ~/blog. Buat sebuah directory bernama production dengan command mkdir production. Menyambungkan repository environment dev ke directory *production dengan command git submodule add -b main https://github.com/\u0026lt;username-github\u0026gt;/\u0026lt;username-github\u0026gt;.github.io.git production. Meng-generate versi final dari blog pada environment dev ke directory production dengan command hugo -D -d production. Lalu membuat sebuah file kosong dengan nama .nojekyll pada directory production dengan command touch ./production/.nojekyll. Lakukan commit sekali lagi dengan command git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;Production Commit\u0026quot;. Push Environment Prod ke Repository Github Pindah ke directory production yang telah dibuat dengan command cd ~/blog/production. Lalu push ke remote repository dengan command git push origin main. Memperbarui Blog Untuk meng-update blog dapat dilakukan dengan menambahkan perubahan pada environment dev atau pada kali ini yaitu dalam directory ~/blog/. Hasil pembaruan dapat dilihat dengan menggunakan command hugo server. Setelah itu save seluruh file yang telah di-update, lalu generate hasil update ke directory production dengan command cd ~/blog \u0026amp;\u0026amp; hugo -D -d production, melakukan commit dan push ke remote repository \u0026lt;username-github\u0026gt;.github.io dengan command cd ~/blog/production \u0026amp;\u0026amp; git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;Production Commit\u0026quot; \u0026amp;\u0026amp; git push origin main. ","date":"2022-11-23T00:00:00Z","permalink":"https://operacastor.github.io/p/membuat-blog-dengan-hugo-dan-github-pages/","title":"Membuat Blog dengan Hugo dan GitHub Pages"}]